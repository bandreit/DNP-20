@page "/add-family"
@using A1_DNP1Y.Data.Impl
@using A1_DNP1Y.Data
@using A1_DNP1Y.Persistence
@using global::Models
@using Syncfusion.Blazor.Inputs
@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.Buttons

<div class="col-lg-12 control-section">
    <EditForm Model="@_newFamily" OnValidSubmit="@AddNewFamily" class="content-wrapper">
        @* <div class="row"> *@
        @* <DataAnnotationsValidator/> *@
        <ObjectGraphDataAnnotationsValidator />
        <ValidationSummary/>
        @* </div> *@

        <div>
            <h2 class="font-weight-bold">Add A Family</h2>
            <p>Please enter details below to add a family</p>
            <hr/>
        </div>

        <div id="form-div" class="card p-4">
            <h3>Address</h3>
            <hr style="margin-bottom: 0"/>
            <div class="row">
                <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8">
                    <SfTextBox @bind-Value="_newFamily.StreetName" Placeholder="Street Name" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                </div>
                <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                    <SfNumericTextBox CssClass="e-bigger" Format="Nr: ###" @bind-Value="@_newFamily.HouseNumber" Min=0 FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>
                </div>
            </div>

            @* ADULTS *@
            <h3 class="mt-4">Adults:</h3>
            <hr/>
            @for (var i = 0; i < _newFamily.Adults.Count; i++)
            {
                var index = i;
                var adult = _newFamily.Adults[index];
                // var adult = ;

                <div class="card px-4 mb-4">

                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <SfTextBox @bind-Value="adult.FirstName" Placeholder="First Name" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <SfTextBox @bind-Value="adult.LastName" Placeholder="Last Name" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <SfTextBox @bind-Value="adult.HairColor" Placeholder="Hair Color" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                            @* <ValidationMessage For="@() => adult.HairColor"></ValidationMessage> *@
                        </div>
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <SfTextBox @bind-Value="adult.EyeColor" Placeholder="Eye Color" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                            <div class="control-label">
                                Age (years)
                            </div>
                            <SfNumericTextBox CssClass="e-bigger" @bind-Value="adult.Age" Min=0 Max=125 ></SfNumericTextBox>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                            <div class="control-label">
                                Weight (kg)
                            </div>
                            <SfNumericTextBox CssClass="e-bigger" @bind-Value="adult.Weight" Min=1 Max=250 ></SfNumericTextBox>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                            <div class="control-label">
                                Height (cm)
                            </div>
                            <SfNumericTextBox CssClass="e-bigger" @bind-Value="adult.Height" Min=30 Max=250></SfNumericTextBox>
                        </div>
                    </div>

                    @* //TODO sex *@
                    @* //TODO job *@


                    <div class="d-flex justify-content-end mb-2">
                        <SfButton CssClass="e-danger" type="button" @onclick="@(() => _newFamily.Adults.RemoveAt(index))">Remove</SfButton>
                    </div>
                </div>
            }

            <div class="d-flex justify-content-end mb-2">
                <SfButton IconCss="e-btn-sb-icons e-add-icon" CssClass="e-small e-round" IsPrimary="true" type="button" @onclick="@(() => _newFamily.Adults.Add(new Adult()))"></SfButton>
            </div>

            @*             $1$ CHILDREN #1# *@
            @* *@
            @*             @if (_newFamily.Children.Count == 0 || _newFamily.Children.Count > 1) *@
            @*             { *@
            @*                 <h3 class="mt-2">Children:</h3> *@
            @*             } *@
            @*             else *@
            @*             { *@
            @*                 <h3 class="mt-2">Child:</h3> *@
            @*             } *@
            @* *@
            @*             <hr/> *@
            @*             @for (var i = 0; i < _newFamily.Children.Count; i++) *@
            @*             { *@
            @*                 var index = i; *@
            @*                 var child = _newFamily.Children[i]; *@
            @* *@
            @*                 <div class="card px-4 mb-4"> *@
            @* *@
            @*                     <div class="row"> *@
            @*                         <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6"> *@
            @*                             <SfTextBox Placeholder="First Name" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox> *@
            @*                         </div> *@
            @*                         <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6"> *@
            @*                             <SfTextBox Placeholder="Last Name" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox> *@
            @*                         </div> *@
            @*                     </div> *@
            @* *@
            @*                     <div class="row"> *@
            @*                         <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6"> *@
            @*                             <SfTextBox Placeholder="Hair Color" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox> *@
            @*                         </div> *@
            @*                         <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6"> *@
            @*                             <SfTextBox Placeholder="Eye Color" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox> *@
            @*                         </div> *@
            @*                     </div> *@
            @* *@
            @*                     <div class="d-flex justify-content-end mb-2"> *@
            @*                         <SfButton CssClass="e-danger" @onclick="@(() => _newFamily.Children.RemoveAt(index))">Remove</SfButton> *@
            @*                     </div> *@
            @*                 </div> *@
            @*             } *@

            @* <div class="d-flex justify-content-end mb-2"> *@
            @*     <SfButton IconCss="e-btn-sb-icons e-add-icon" CssClass="e-small e-round" IsPrimary="true" @onclick="@(() => _newFamily.Children.Add(new Child()))"></SfButton> *@
            @* </div> *@
        </div>


        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6 my-2">
            <SfButton IsPrimary="true" type="submit">Create Family</SfButton>
        </div>

    </EditForm>
</div>

<style>
.content-wrapper {
    width: 90%;
    margin: 0 auto;
    min-width: 85px;
}


.content-wrapper div.row {
    padding: 8px 0px;
}


@@media only screen and (max-width: 480px) {
    .content-wrapper {
        width: 92%;
    }
    
    .content-wrapper div.row {
        padding: 0px;
    }
}
#description td {
    vertical-align: top;
}
.e-float-input,
.e-float-input.e-control-wrapper {
    margin-top: 0;
}
        
        
/*gae*/
#button-control .col-xs-12 {
    margin: 15px 0;
}
@@font-face {
    font-family: 'button-icons';
    src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
    font-weight: normal;
    font-style: normal;
}
.e-btn-sb-icons {
    font-family: 'button-icons';
    line-height: 1;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
.e-play-icon::before {
    content: '\e701';
}
.e-pause-icon::before {
    content: '\e705';
}
.e-open-icon::before {
    content: '\e70d';
}
.e-add-icon::before {
    content: '\e70a';
}        
       
        
</style>

@code {
    private Family _newFamily = new Family();

    protected async override Task OnInitializedAsync()
    {
    // var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    // var user = authState.User;
    // Claim userClaim = user.FindFirst(claim => claim.Type.Equals("Id"));
    // newTodoItem.UserId = Convert.ToInt32(userClaim.Value);
    }

    private void AddNewFamily()
    {
        FamilyService.AddFamily(_newFamily);
        NavigationManager.NavigateTo("/families");
    }

}