@page "/add-adult"
@using A1_DNP1Y.Data.Impl
@using A1_DNP1Y.Data
@using A1_DNP1Y.Models
@using A1_DNP1Y.Persistence
@using global::Models
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@inject IAdultService AdultService
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.Buttons

<div class="col-lg-12 control-section">
    <EditForm Model="@_newAdult" OnValidSubmit="@AddNewAdult" class="content-wrapper">
        <ObjectGraphDataAnnotationsValidator/>

        <div>
            <h2 class="font-weight-bold">Add An Adult</h2>
            <p>Please enter details below to add an adult</p>
            <hr/>
        </div>

        <div class="card px-4 mb-4 pb-4">

            <div class="row">
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox @bind-Value="_newAdult.FirstName" Placeholder="First Name" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => _newAdult.FirstName)"/>
                </div>
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox @bind-Value="_newAdult.LastName" Placeholder="Last Name" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => _newAdult.LastName)"/>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox @bind-Value="_newAdult.HairColor" Placeholder="Hair Color" CssClass="e-bigger" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => _newAdult.HairColor)"/>
                </div>
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox @bind-Value="_newAdult.EyeColor" Placeholder="Eye Color" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => _newAdult.EyeColor)"/>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfComboBox TValue="string" TItem="SexFields" CssClass="e-bigger e-rtl" PopupHeight="230px" Placeholder="Sex" @bind-Value="_newAdult.Sex" DataSource="@Sexes" FloatLabelType="@FloatLabelType.Auto">
                        <ComboBoxEvents TValue="string" TItem="SexFields"></ComboBoxEvents>
                        <ComboBoxFieldSettings Text="Text" Value="ID"></ComboBoxFieldSettings>
                    </SfComboBox>
                    <ValidationMessage For="@(() => _newAdult.Sex)"/>
                </div>
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox @bind-Value="_newAdult.JobTitle" Placeholder="Job Title" CssClass="e-bigger e-rtl" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => _newAdult.JobTitle)"/>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                    <div class="control-label">
                        Age (years)
                    </div>
                    <SfNumericTextBox CssClass="e-bigger" @bind-Value="_newAdult.Age" Min=0 Max=125></SfNumericTextBox>
                    <ValidationMessage For="@(() => _newAdult.Age)"/>
                </div>
                <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                    <div class="control-label">
                        Weight (kg)
                    </div>
                    <SfNumericTextBox CssClass="e-bigger" @bind-Value="_newAdult.Weight" Min=1 Max=250></SfNumericTextBox>
                    <ValidationMessage For="@(() => _newAdult.Weight)"/>
                </div>
                <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                    <div class="control-label">
                        Height (cm)
                    </div>
                    <SfNumericTextBox CssClass="e-bigger" @bind-Value="_newAdult.Height" Min=30 Max=250></SfNumericTextBox>
                    <ValidationMessage For="@(() => _newAdult.Height)"/>
                </div>
            </div>
        </div>


        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6 my-2">
            <SfButton IsPrimary="true" type="submit">Create Adult</SfButton>
        </div>

    </EditForm>
</div>

<style>
.content-wrapper {
    width: 90%;
    margin: 0 auto;
    min-width: 85px;
}


.content-wrapper div.row {
    padding: 8px 0px;
}

.interest-list > ul{
display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
}


@@media only screen and (max-width: 480px) {
    .content-wrapper {
        width: 92%;
    }
    
    .content-wrapper div.row {
        padding: 0px;
    }
}
#description td {
    vertical-align: top;
}
.e-float-input,
.e-float-input.e-control-wrapper {
    margin-top: 0;
}
        
        
/*gae*/
#button-control .col-xs-12 {
    margin: 15px 0;
}
@@font-face {
    font-family: 'button-icons';
    src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
    font-weight: normal;
    font-style: normal;
}
.e-btn-sb-icons {
    font-family: 'button-icons';
    line-height: 1;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
.e-play-icon::before {
    content: '\e701';
}
.e-pause-icon::before {
    content: '\e705';
}
.e-open-icon::before {
    content: '\e70d';
}
.e-add-icon::before {
    content: '\e70a';
}        
       
        
</style>

@code {
    private Adult _newAdult = new Adult();

    public class SexFields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    private List<SexFields> Sexes = new List<SexFields>()
    {
        new SexFields() {ID = "F", Text = "Female"},
        new SexFields() {ID = "M", Text = "Male"},
        new SexFields() {ID = "Other", Text = "Other"},
    };

    private void AddNewAdult()
    {
        AdultService.AddAdult(_newAdult);
        NavigationManager.NavigateTo("/adults");
    }

}