#pragma checksum "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "038754672b3d8fbaa3839279aa59f4c077e5f0d3"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace A1_DNP1Y.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using A1_DNP1Y;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using A1_DNP1Y.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using A1_DNP1Y.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using A1_DNP1Y.Data.Impl;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using global::Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using A1_DNP1Y.Shared.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using A1_DNP1Y.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using A1_DNP1Y.Persistence;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/families")]
    public partial class FamiliesList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 40 "C:\Users\andy2\RiderProjects\DNPStructureTest\A1-DNP1Y\Pages\FamiliesList.razor"
       
    private IList<Family> _families;
    private IList<Family> _familiesToShow;
    private string FamilyToSearch { get; set; }
    private string FamilyToSearchByAdult { get; set; }

    public class FamilyFields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    public class AdultFields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    public List<FamilyFields> FamilyNames = new List<FamilyFields>();
    public List<AdultFields> AdultNames = new List<AdultFields>();

    private void FilterByFamilyName()
    {
        _familiesToShow = _families.Where(family => family.GetLastNames() == FamilyToSearch).ToList();
        if (FamilyToSearch == null)
        {
            _familiesToShow = _families;
        }
    }

    private void FilterByFamilyAdult()
    {
        _familiesToShow = _families.Where(CheckForAdults).ToList();
        if (string.IsNullOrEmpty(FamilyToSearchByAdult))
        {
            _familiesToShow = _families;
        }
    }

    private bool CheckForAdults(Family family)
    {
        return family.Adults.Exists(adult => adult.FirstName + " " + adult.LastName == FamilyToSearchByAdult);
    }

    protected override async Task OnInitializedAsync()
    {
        _families = await WebFamilyService.GetFamiliesAsync();
        _familiesToShow = _families;

        foreach (var family in _familiesToShow)
        {
            string LastNames = "";
            List<Adult> adultsInFamily = family.Adults;
            if (adultsInFamily.Count > 1)
            {
                if (adultsInFamily.Any(adult => adult.LastName != adultsInFamily[0].LastName))
                {
                    adultsInFamily.ForEach(adult => LastNames += adult.LastName + "-");
                    LastNames = LastNames.Remove(LastNames.Length - 1);
                }
                else
                {
                    LastNames = adultsInFamily[0].LastName;
                }
            }
            else if (adultsInFamily.Count == 1)
            {
                LastNames = adultsInFamily[0].LastName;
            }
            LastNames += " Family";

            FamilyNames.Add(new FamilyFields() {ID = family.Id.ToString(), Text = LastNames});

            foreach (var adult in family.Adults)
            {
                AdultNames.Add(new AdultFields() {ID = adult.Id.ToString(), Text = adult.FirstName + " " + adult.LastName});
            }
        }
        
    }

    void RemoveFamilyById(int? familyId)
    {
        Family familyToRemove = _families.First(t => t.Id == familyId);
        WebFamilyService.RemoveFamily(familyId);
        _families.Remove(familyToRemove);
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWebFamilyService WebFamilyService { get; set; }
    }
}
#pragma warning restore 1591
