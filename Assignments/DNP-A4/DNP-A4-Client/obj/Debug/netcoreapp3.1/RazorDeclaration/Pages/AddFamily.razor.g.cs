#pragma checksum "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8c503d6e6a9aa33cda9e30ff353898f2b55c92ec"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DNP_A4_Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using DNP_A4_Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\_Imports.razor"
using DNP_A4_Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using A1_DNP1Y.Data.Impl;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using A1_DNP1Y.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using A1_DNP1Y.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using global::Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
using System.Net;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/add-family")]
    public partial class AddFamily : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 380 "C:\Users\andy2\RiderProjects\DNPStructureTest\Assignments\DNP-A4\DNP-A4-Client\Pages\AddFamily.razor"
       
    private Family _newFamily = new Family();

    public class SexFields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    private List<SexFields> Sexes = new List<SexFields>()
    {
        new SexFields() {ID = "F", Text = "Female"},
        new SexFields() {ID = "M", Text = "Male"},
        new SexFields() {ID = "Other", Text = "Other"},
    };

    private List<Interest> Interests = new List<Interest>()
    {
        new Interest() {Type = "Soccer"},
        new Interest() {Type = "Drawing"},
        new Interest() {Type = "Kite Flying"},
        new Interest() {Type = "Roller Blades"},
        new Interest() {Type = "Board Games"},
        new Interest() {Type = "Ballet"},
        new Interest() {Type = "Hockey"},
        new Interest() {Type = "Gaming"},
        new Interest() {Type = "Lego"},
        new Interest() {Type = "Scout"},
        new Interest() {Type = "Gymnastics"},
        new Interest() {Type = "Harry Potter"},
        new Interest() {Type = "Frozen"}
    };


    public class FormResponse
    {
        public string[] Value { get; set; }
    }

    List<FormResponse> Values = new List<FormResponse>();
    List<SfListBox<string[], Interest>> ListOfChildInterests = new List<SfListBox<string[], Interest>>();
    

    private async void AddNewFamily()
    {
        for (int i = 0; i < _newFamily.Children.Count; i++)
        {
            var localInterests = ListOfChildInterests[i].GetDataByValue(Values[i].Value);
            var child = _newFamily.Children[i];
            if (localInterests.Count != 0 && localInterests != null)
            {
                foreach (Interest li in localInterests)
                {
                    _newFamily.Children[i].ChildInterests.Add(new ChildInterest() {ChildId = child.Id, Child = child, InterestId = li.Type, Interest = new Interest() {Type = li.Type}});
                }
            }
        }

        HttpStatusCode responseCode = await WebFamilyService.AddFamily(_newFamily);
        if (responseCode == HttpStatusCode.Created)
        {
            NavigationManager.NavigateTo("/families");
        }
        else
        {
            Console.Out.WriteLine("Error"); // I need a proper error handling UI logic :((
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWebFamilyService WebFamilyService { get; set; }
    }
}
#pragma warning restore 1591
